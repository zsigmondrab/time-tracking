/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.timetracking.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.liferay.timetracking.model.WorkDay;
import com.liferay.timetracking.model.WorkDayModel;
import com.liferay.timetracking.model.WorkDaySoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the WorkDay service. Represents a row in the &quot;TimeTracking_WorkDay&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.liferay.timetracking.model.WorkDayModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link WorkDayImpl}.
 * </p>
 *
 * @author Istvan Sajtos
 * @see WorkDayImpl
 * @see com.liferay.timetracking.model.WorkDay
 * @see com.liferay.timetracking.model.WorkDayModel
 * @generated
 */
@JSON(strict = true)
public class WorkDayModelImpl extends BaseModelImpl<WorkDay>
	implements WorkDayModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a work day model instance should use the {@link com.liferay.timetracking.model.WorkDay} interface instead.
	 */
	public static final String TABLE_NAME = "TimeTracking_WorkDay";
	public static final Object[][] TABLE_COLUMNS = {
			{ "workDayId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "dayOfYearId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "startTime", Types.INTEGER },
			{ "endTime", Types.INTEGER },
			{ "lunchBreak", Types.INTEGER },
			{ "timestamp", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table TimeTracking_WorkDay (workDayId LONG not null primary key,groupId LONG,companyId LONG,dayOfYearId LONG,userId LONG,startTime INTEGER,endTime INTEGER,lunchBreak INTEGER,timestamp DATE null)";
	public static final String TABLE_SQL_DROP = "drop table TimeTracking_WorkDay";
	public static final String ORDER_BY_JPQL = " ORDER BY workDay.workDayId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY TimeTracking_WorkDay.workDayId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.liferay.timetracking.model.WorkDay"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.liferay.timetracking.model.WorkDay"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static WorkDay toModel(WorkDaySoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		WorkDay model = new WorkDayImpl();

		model.setWorkDayId(soapModel.getWorkDayId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setDayOfYearId(soapModel.getDayOfYearId());
		model.setUserId(soapModel.getUserId());
		model.setStartTime(soapModel.getStartTime());
		model.setEndTime(soapModel.getEndTime());
		model.setLunchBreak(soapModel.getLunchBreak());
		model.setTimestamp(soapModel.getTimestamp());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<WorkDay> toModels(WorkDaySoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<WorkDay> models = new ArrayList<WorkDay>(soapModels.length);

		for (WorkDaySoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.liferay.timetracking.model.WorkDay"));

	public WorkDayModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _workDayId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setWorkDayId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _workDayId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return WorkDay.class;
	}

	@Override
	public String getModelClassName() {
		return WorkDay.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("workDayId", getWorkDayId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("dayOfYearId", getDayOfYearId());
		attributes.put("userId", getUserId());
		attributes.put("startTime", getStartTime());
		attributes.put("endTime", getEndTime());
		attributes.put("lunchBreak", getLunchBreak());
		attributes.put("timestamp", getTimestamp());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long workDayId = (Long)attributes.get("workDayId");

		if (workDayId != null) {
			setWorkDayId(workDayId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long dayOfYearId = (Long)attributes.get("dayOfYearId");

		if (dayOfYearId != null) {
			setDayOfYearId(dayOfYearId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Integer startTime = (Integer)attributes.get("startTime");

		if (startTime != null) {
			setStartTime(startTime);
		}

		Integer endTime = (Integer)attributes.get("endTime");

		if (endTime != null) {
			setEndTime(endTime);
		}

		Integer lunchBreak = (Integer)attributes.get("lunchBreak");

		if (lunchBreak != null) {
			setLunchBreak(lunchBreak);
		}

		Date timestamp = (Date)attributes.get("timestamp");

		if (timestamp != null) {
			setTimestamp(timestamp);
		}
	}

	@JSON
	@Override
	public long getWorkDayId() {
		return _workDayId;
	}

	@Override
	public void setWorkDayId(long workDayId) {
		_workDayId = workDayId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getDayOfYearId() {
		return _dayOfYearId;
	}

	@Override
	public void setDayOfYearId(long dayOfYearId) {
		_dayOfYearId = dayOfYearId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public int getStartTime() {
		return _startTime;
	}

	@Override
	public void setStartTime(int startTime) {
		_startTime = startTime;
	}

	@JSON
	@Override
	public int getEndTime() {
		return _endTime;
	}

	@Override
	public void setEndTime(int endTime) {
		_endTime = endTime;
	}

	@JSON
	@Override
	public int getLunchBreak() {
		return _lunchBreak;
	}

	@Override
	public void setLunchBreak(int lunchBreak) {
		_lunchBreak = lunchBreak;
	}

	@JSON
	@Override
	public Date getTimestamp() {
		return _timestamp;
	}

	@Override
	public void setTimestamp(Date timestamp) {
		_timestamp = timestamp;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			WorkDay.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public WorkDay toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (WorkDay)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		WorkDayImpl workDayImpl = new WorkDayImpl();

		workDayImpl.setWorkDayId(getWorkDayId());
		workDayImpl.setGroupId(getGroupId());
		workDayImpl.setCompanyId(getCompanyId());
		workDayImpl.setDayOfYearId(getDayOfYearId());
		workDayImpl.setUserId(getUserId());
		workDayImpl.setStartTime(getStartTime());
		workDayImpl.setEndTime(getEndTime());
		workDayImpl.setLunchBreak(getLunchBreak());
		workDayImpl.setTimestamp(getTimestamp());

		workDayImpl.resetOriginalValues();

		return workDayImpl;
	}

	@Override
	public int compareTo(WorkDay workDay) {
		long primaryKey = workDay.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof WorkDay)) {
			return false;
		}

		WorkDay workDay = (WorkDay)obj;

		long primaryKey = workDay.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<WorkDay> toCacheModel() {
		WorkDayCacheModel workDayCacheModel = new WorkDayCacheModel();

		workDayCacheModel.workDayId = getWorkDayId();

		workDayCacheModel.groupId = getGroupId();

		workDayCacheModel.companyId = getCompanyId();

		workDayCacheModel.dayOfYearId = getDayOfYearId();

		workDayCacheModel.userId = getUserId();

		workDayCacheModel.startTime = getStartTime();

		workDayCacheModel.endTime = getEndTime();

		workDayCacheModel.lunchBreak = getLunchBreak();

		Date timestamp = getTimestamp();

		if (timestamp != null) {
			workDayCacheModel.timestamp = timestamp.getTime();
		}
		else {
			workDayCacheModel.timestamp = Long.MIN_VALUE;
		}

		return workDayCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(19);

		sb.append("{workDayId=");
		sb.append(getWorkDayId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", dayOfYearId=");
		sb.append(getDayOfYearId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", startTime=");
		sb.append(getStartTime());
		sb.append(", endTime=");
		sb.append(getEndTime());
		sb.append(", lunchBreak=");
		sb.append(getLunchBreak());
		sb.append(", timestamp=");
		sb.append(getTimestamp());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(31);

		sb.append("<model><model-name>");
		sb.append("com.liferay.timetracking.model.WorkDay");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>workDayId</column-name><column-value><![CDATA[");
		sb.append(getWorkDayId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dayOfYearId</column-name><column-value><![CDATA[");
		sb.append(getDayOfYearId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>startTime</column-name><column-value><![CDATA[");
		sb.append(getStartTime());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>endTime</column-name><column-value><![CDATA[");
		sb.append(getEndTime());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>lunchBreak</column-name><column-value><![CDATA[");
		sb.append(getLunchBreak());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>timestamp</column-name><column-value><![CDATA[");
		sb.append(getTimestamp());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = WorkDay.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			WorkDay.class
		};
	private long _workDayId;
	private long _groupId;
	private long _companyId;
	private long _dayOfYearId;
	private long _userId;
	private String _userUuid;
	private int _startTime;
	private int _endTime;
	private int _lunchBreak;
	private Date _timestamp;
	private WorkDay _escapedModel;
}